/*
 * OTPIXEL
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.6.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ConnectorItem', 'model/ConnectorOptionItem', 'model/DockerInfo', 'model/GeneralInfo', 'model/InputItem', 'model/InputOptionItem', 'model/Instance', 'model/InstanceForceInputItem', 'model/InstanceInputItem', 'model/InstanceInputOptionItem', 'model/InstanceLoggingItem', 'model/InstanceLoggingOptionItem', 'model/InstanceOutputItem', 'model/InstanceOutputOptionItem', 'model/KPI', 'model/KpiThresholds', 'model/LoggingItem', 'model/LoggingOptionItem', 'model/Model', 'model/OutputItem', 'model/OutputOptionItem', 'model/ScheduleInfo', 'model/ScheduledInstance', 'model/SupportedTransformationItem', 'model/SystemInfo', 'model/Transform', 'api/InstanceResourceApi', 'api/KPIResourceApi', 'api/ModelResourceApi', 'api/ScheduledInstanceResourceApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ConnectorItem'), require('./model/ConnectorOptionItem'), require('./model/DockerInfo'), require('./model/GeneralInfo'), require('./model/InputItem'), require('./model/InputOptionItem'), require('./model/Instance'), require('./model/InstanceForceInputItem'), require('./model/InstanceInputItem'), require('./model/InstanceInputOptionItem'), require('./model/InstanceLoggingItem'), require('./model/InstanceLoggingOptionItem'), require('./model/InstanceOutputItem'), require('./model/InstanceOutputOptionItem'), require('./model/KPI'), require('./model/KpiThresholds'), require('./model/LoggingItem'), require('./model/LoggingOptionItem'), require('./model/Model'), require('./model/OutputItem'), require('./model/OutputOptionItem'), require('./model/ScheduleInfo'), require('./model/ScheduledInstance'), require('./model/SupportedTransformationItem'), require('./model/SystemInfo'), require('./model/Transform'), require('./api/InstanceResourceApi'), require('./api/KPIResourceApi'), require('./api/ModelResourceApi'), require('./api/ScheduledInstanceResourceApi'));
  }
}(function(ApiClient, ConnectorItem, ConnectorOptionItem, DockerInfo, GeneralInfo, InputItem, InputOptionItem, Instance, InstanceForceInputItem, InstanceInputItem, InstanceInputOptionItem, InstanceLoggingItem, InstanceLoggingOptionItem, InstanceOutputItem, InstanceOutputOptionItem, KPI, KpiThresholds, LoggingItem, LoggingOptionItem, Model, OutputItem, OutputOptionItem, ScheduleInfo, ScheduledInstance, SupportedTransformationItem, SystemInfo, Transform, InstanceResourceApi, KPIResourceApi, ModelResourceApi, ScheduledInstanceResourceApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Otpixel = require('index'); // See note below*.
   * var xxxSvc = new Otpixel.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Otpixel.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Otpixel.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Otpixel.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.6.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ConnectorItem model constructor.
     * @property {module:model/ConnectorItem}
     */
    ConnectorItem: ConnectorItem,
    /**
     * The ConnectorOptionItem model constructor.
     * @property {module:model/ConnectorOptionItem}
     */
    ConnectorOptionItem: ConnectorOptionItem,
    /**
     * The DockerInfo model constructor.
     * @property {module:model/DockerInfo}
     */
    DockerInfo: DockerInfo,
    /**
     * The GeneralInfo model constructor.
     * @property {module:model/GeneralInfo}
     */
    GeneralInfo: GeneralInfo,
    /**
     * The InputItem model constructor.
     * @property {module:model/InputItem}
     */
    InputItem: InputItem,
    /**
     * The InputOptionItem model constructor.
     * @property {module:model/InputOptionItem}
     */
    InputOptionItem: InputOptionItem,
    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance: Instance,
    /**
     * The InstanceForceInputItem model constructor.
     * @property {module:model/InstanceForceInputItem}
     */
    InstanceForceInputItem: InstanceForceInputItem,
    /**
     * The InstanceInputItem model constructor.
     * @property {module:model/InstanceInputItem}
     */
    InstanceInputItem: InstanceInputItem,
    /**
     * The InstanceInputOptionItem model constructor.
     * @property {module:model/InstanceInputOptionItem}
     */
    InstanceInputOptionItem: InstanceInputOptionItem,
    /**
     * The InstanceLoggingItem model constructor.
     * @property {module:model/InstanceLoggingItem}
     */
    InstanceLoggingItem: InstanceLoggingItem,
    /**
     * The InstanceLoggingOptionItem model constructor.
     * @property {module:model/InstanceLoggingOptionItem}
     */
    InstanceLoggingOptionItem: InstanceLoggingOptionItem,
    /**
     * The InstanceOutputItem model constructor.
     * @property {module:model/InstanceOutputItem}
     */
    InstanceOutputItem: InstanceOutputItem,
    /**
     * The InstanceOutputOptionItem model constructor.
     * @property {module:model/InstanceOutputOptionItem}
     */
    InstanceOutputOptionItem: InstanceOutputOptionItem,
    /**
     * The KPI model constructor.
     * @property {module:model/KPI}
     */
    KPI: KPI,
    /**
     * The KpiThresholds model constructor.
     * @property {module:model/KpiThresholds}
     */
    KpiThresholds: KpiThresholds,
    /**
     * The LoggingItem model constructor.
     * @property {module:model/LoggingItem}
     */
    LoggingItem: LoggingItem,
    /**
     * The LoggingOptionItem model constructor.
     * @property {module:model/LoggingOptionItem}
     */
    LoggingOptionItem: LoggingOptionItem,
    /**
     * The Model model constructor.
     * @property {module:model/Model}
     */
    Model: Model,
    /**
     * The OutputItem model constructor.
     * @property {module:model/OutputItem}
     */
    OutputItem: OutputItem,
    /**
     * The OutputOptionItem model constructor.
     * @property {module:model/OutputOptionItem}
     */
    OutputOptionItem: OutputOptionItem,
    /**
     * The ScheduleInfo model constructor.
     * @property {module:model/ScheduleInfo}
     */
    ScheduleInfo: ScheduleInfo,
    /**
     * The ScheduledInstance model constructor.
     * @property {module:model/ScheduledInstance}
     */
    ScheduledInstance: ScheduledInstance,
    /**
     * The SupportedTransformationItem model constructor.
     * @property {module:model/SupportedTransformationItem}
     */
    SupportedTransformationItem: SupportedTransformationItem,
    /**
     * The SystemInfo model constructor.
     * @property {module:model/SystemInfo}
     */
    SystemInfo: SystemInfo,
    /**
     * The Transform model constructor.
     * @property {module:model/Transform}
     */
    Transform: Transform,
    /**
     * The InstanceResourceApi service constructor.
     * @property {module:api/InstanceResourceApi}
     */
    InstanceResourceApi: InstanceResourceApi,
    /**
     * The KPIResourceApi service constructor.
     * @property {module:api/KPIResourceApi}
     */
    KPIResourceApi: KPIResourceApi,
    /**
     * The ModelResourceApi service constructor.
     * @property {module:api/ModelResourceApi}
     */
    ModelResourceApi: ModelResourceApi,
    /**
     * The ScheduledInstanceResourceApi service constructor.
     * @property {module:api/ScheduledInstanceResourceApi}
     */
    ScheduledInstanceResourceApi: ScheduledInstanceResourceApi
  };

  return exports;
}));

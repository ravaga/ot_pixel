/*
 * OTPIXEL
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Config', 'model/Coordinates', 'model/DummyJSON', 'model/EventLogItem', 'model/IHConfig', 'model/Input', 'model/InputDataSource', 'model/InputEndpoint', 'model/InputHeader', 'model/Instance', 'model/JsonNode', 'model/KPI', 'model/KpiOperation', 'model/KpiOperationDynamic', 'model/KpiOperationScheduled', 'model/KpiOperationStatic', 'model/KpiThresholds', 'model/LastKPI', 'model/Model', 'model/OTConfig', 'model/Port', 'model/PredictiveAlgorithm', 'model/ScheduleInfo', 'model/ScheduledInstance', 'model/ServiceUrls', 'api/ConfigResourceApi', 'api/DummyServiceResourceApi', 'api/EventLogItemResourceApi', 'api/InstanceResourceApi', 'api/KPIResourceApi', 'api/ModelResourceApi', 'api/PortResourceApi', 'api/PredictiveAlgorithmResourceApi', 'api/ScheduledInstanceResourceApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Config'), require('./model/Coordinates'), require('./model/DummyJSON'), require('./model/EventLogItem'), require('./model/IHConfig'), require('./model/Input'), require('./model/InputDataSource'), require('./model/InputEndpoint'), require('./model/InputHeader'), require('./model/Instance'), require('./model/JsonNode'), require('./model/KPI'), require('./model/KpiOperation'), require('./model/KpiOperationDynamic'), require('./model/KpiOperationScheduled'), require('./model/KpiOperationStatic'), require('./model/KpiThresholds'), require('./model/LastKPI'), require('./model/Model'), require('./model/OTConfig'), require('./model/Port'), require('./model/PredictiveAlgorithm'), require('./model/ScheduleInfo'), require('./model/ScheduledInstance'), require('./model/ServiceUrls'), require('./api/ConfigResourceApi'), require('./api/DummyServiceResourceApi'), require('./api/EventLogItemResourceApi'), require('./api/InstanceResourceApi'), require('./api/KPIResourceApi'), require('./api/ModelResourceApi'), require('./api/PortResourceApi'), require('./api/PredictiveAlgorithmResourceApi'), require('./api/ScheduledInstanceResourceApi'));
  }
}(function(ApiClient, Config, Coordinates, DummyJSON, EventLogItem, IHConfig, Input, InputDataSource, InputEndpoint, InputHeader, Instance, JsonNode, KPI, KpiOperation, KpiOperationDynamic, KpiOperationScheduled, KpiOperationStatic, KpiThresholds, LastKPI, Model, OTConfig, Port, PredictiveAlgorithm, ScheduleInfo, ScheduledInstance, ServiceUrls, ConfigResourceApi, DummyServiceResourceApi, EventLogItemResourceApi, InstanceResourceApi, KPIResourceApi, ModelResourceApi, PortResourceApi, PredictiveAlgorithmResourceApi, ScheduledInstanceResourceApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Otpixel = require('index'); // See note below*.
   * var xxxSvc = new Otpixel.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Otpixel.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Otpixel.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Otpixel.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Config model constructor.
     * @property {module:model/Config}
     */
    Config: Config,
    /**
     * The Coordinates model constructor.
     * @property {module:model/Coordinates}
     */
    Coordinates: Coordinates,
    /**
     * The DummyJSON model constructor.
     * @property {module:model/DummyJSON}
     */
    DummyJSON: DummyJSON,
    /**
     * The EventLogItem model constructor.
     * @property {module:model/EventLogItem}
     */
    EventLogItem: EventLogItem,
    /**
     * The IHConfig model constructor.
     * @property {module:model/IHConfig}
     */
    IHConfig: IHConfig,
    /**
     * The Input model constructor.
     * @property {module:model/Input}
     */
    Input: Input,
    /**
     * The InputDataSource model constructor.
     * @property {module:model/InputDataSource}
     */
    InputDataSource: InputDataSource,
    /**
     * The InputEndpoint model constructor.
     * @property {module:model/InputEndpoint}
     */
    InputEndpoint: InputEndpoint,
    /**
     * The InputHeader model constructor.
     * @property {module:model/InputHeader}
     */
    InputHeader: InputHeader,
    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance: Instance,
    /**
     * The JsonNode model constructor.
     * @property {module:model/JsonNode}
     */
    JsonNode: JsonNode,
    /**
     * The KPI model constructor.
     * @property {module:model/KPI}
     */
    KPI: KPI,
    /**
     * The KpiOperation model constructor.
     * @property {module:model/KpiOperation}
     */
    KpiOperation: KpiOperation,
    /**
     * The KpiOperationDynamic model constructor.
     * @property {module:model/KpiOperationDynamic}
     */
    KpiOperationDynamic: KpiOperationDynamic,
    /**
     * The KpiOperationScheduled model constructor.
     * @property {module:model/KpiOperationScheduled}
     */
    KpiOperationScheduled: KpiOperationScheduled,
    /**
     * The KpiOperationStatic model constructor.
     * @property {module:model/KpiOperationStatic}
     */
    KpiOperationStatic: KpiOperationStatic,
    /**
     * The KpiThresholds model constructor.
     * @property {module:model/KpiThresholds}
     */
    KpiThresholds: KpiThresholds,
    /**
     * The LastKPI model constructor.
     * @property {module:model/LastKPI}
     */
    LastKPI: LastKPI,
    /**
     * The Model model constructor.
     * @property {module:model/Model}
     */
    Model: Model,
    /**
     * The OTConfig model constructor.
     * @property {module:model/OTConfig}
     */
    OTConfig: OTConfig,
    /**
     * The Port model constructor.
     * @property {module:model/Port}
     */
    Port: Port,
    /**
     * The PredictiveAlgorithm model constructor.
     * @property {module:model/PredictiveAlgorithm}
     */
    PredictiveAlgorithm: PredictiveAlgorithm,
    /**
     * The ScheduleInfo model constructor.
     * @property {module:model/ScheduleInfo}
     */
    ScheduleInfo: ScheduleInfo,
    /**
     * The ScheduledInstance model constructor.
     * @property {module:model/ScheduledInstance}
     */
    ScheduledInstance: ScheduledInstance,
    /**
     * The ServiceUrls model constructor.
     * @property {module:model/ServiceUrls}
     */
    ServiceUrls: ServiceUrls,
    /**
     * The ConfigResourceApi service constructor.
     * @property {module:api/ConfigResourceApi}
     */
    ConfigResourceApi: ConfigResourceApi,
    /**
     * The DummyServiceResourceApi service constructor.
     * @property {module:api/DummyServiceResourceApi}
     */
    DummyServiceResourceApi: DummyServiceResourceApi,
    /**
     * The EventLogItemResourceApi service constructor.
     * @property {module:api/EventLogItemResourceApi}
     */
    EventLogItemResourceApi: EventLogItemResourceApi,
    /**
     * The InstanceResourceApi service constructor.
     * @property {module:api/InstanceResourceApi}
     */
    InstanceResourceApi: InstanceResourceApi,
    /**
     * The KPIResourceApi service constructor.
     * @property {module:api/KPIResourceApi}
     */
    KPIResourceApi: KPIResourceApi,
    /**
     * The ModelResourceApi service constructor.
     * @property {module:api/ModelResourceApi}
     */
    ModelResourceApi: ModelResourceApi,
    /**
     * The PortResourceApi service constructor.
     * @property {module:api/PortResourceApi}
     */
    PortResourceApi: PortResourceApi,
    /**
     * The PredictiveAlgorithmResourceApi service constructor.
     * @property {module:api/PredictiveAlgorithmResourceApi}
     */
    PredictiveAlgorithmResourceApi: PredictiveAlgorithmResourceApi,
    /**
     * The ScheduledInstanceResourceApi service constructor.
     * @property {module:api/ScheduledInstanceResourceApi}
     */
    ScheduledInstanceResourceApi: ScheduledInstanceResourceApi
  };

  return exports;
}));
